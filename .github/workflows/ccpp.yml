name: C/C++ CI

on: [push]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest] #, windows-latest
        true-os: [native, dos]
        exclude:
          - os: windows-latest
            true-os: dos
          - os: macos-latest
            true-os: dos
    steps:
    - name: DOS test
      run: echo "This is building for DOS."
      if: matrix.true-os == 'dos'
    - name: Homebrew for Mac
      if: matrix.os == 'macos-latest'
      run: brew install autoconf automake libtool
    - name: Checkout
      uses: actions/checkout@v1
      if: matrix.true-os == 'native'
    - name: List Directories
      run: ls
      if: matrix.true-os == 'native'
    - name: aclocal
      if: matrix.true-os == 'native'
      run: aclocal
    - name: autoconf
      if: matrix.true-os == 'native'
      run: autoconf
    - name: automake
      if: matrix.true-os == 'native'
      run: automake --add-missing
    - name: configure
      run: ./configure
      if: matrix.true-os == 'native'
    - name: make
      run: make
      if: matrix.true-os == 'native'
    - name: make distcheck
      run: make distcheck
      if: matrix.true-os == 'native'
    - name: Show directory again
      run: ls
    - name: Stash
      if: matrix.true-os != 'dos'
      uses: actions/upload-artifact@v1
      with:
        name: ${{ matrix.os }}.tar.gz
        path: helloworld-0.01.tar.gz
  release:
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Download the Linux dist.
        uses: actions/download-artifact@v1
        with:
          name: ubuntu-latest.tar.gz
          path:  build/ubuntu-latest.tar.gz
      - name: Download the macOS dist.
        uses: actions/download-artifact@v1
        with:
          name: macos-latest.tar.gz
          path: build/macos-latest.tar.gz
      - name: GitHub Releases
        uses: fnkr/github-action-ghr@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
#         GHR_COMPRESS: xz
          GHR_PATH: build/
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
